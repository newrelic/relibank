apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace relibank --out k8s/
    kompose.version: 1.37.0 (HEAD)
  labels:
    io.kompose.service: transaction-service
  name: transaction-service
  namespace: relibank
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: transaction-service
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --namespace relibank --out k8s/
        kompose.version: 1.37.0 (HEAD)
      labels:
        io.kompose.service: transaction-service
    spec:
      containers:
        - args:
            - sh
            - -c
            - uvicorn transaction_service:app --host 0.0.0.0 --port 5000 --workers 1 --log-level error
          env:
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: infrastructure-config
                  key: MSSQL_DATABASE_NAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: MSSQL_SA_PASSWORD
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: infrastructure-config
                  key: MSSQL_SERVER_NAME
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: infrastructure-config
                  key: MSSQL_SA_USER
            - name: KAFKA_BROKER
              valueFrom:
                configMapKeyRef:
                  name: infrastructure-config
                  key: KAFKA_BROKER
          image: transaction-service
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:5000/health
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: transaction-service
          ports:
            - containerPort: 5000
              protocol: TCP
      restartPolicy: Always
