apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: relibank

build:
  tagPolicy:
    sha256: {}
  local:
    useBuildkit: true
    push: false
  artifacts:
  - image: frontend-service
    context: frontend_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        OPENAI_LOG: "{{.OPENAI_LOG}}"
        OPENAI_API_KEY: "{{.OPENAI_API_KEY}}"
        OPENAI_BASE_URL: "{{.OPENAI_BASE_URL}}"
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_BROWSER_LICENSE_KEY}}"
        NEW_RELIC_BROWSER_APPLICATION_ID: "{{.NEW_RELIC_BROWSER_APPLICATION_ID}}"
        APP_NAME: "{{.APP_NAME}}"

    # sync:
    #   manual:
    #   - src: "**/*.js"
    #     dest: /app
    #   - src: "**/*.ts"
    #     dest: /app
    #   - src: "**/*.tsx"
    #     dest: /app
    #   - src: "**/*.css"
    #     dest: /app
  - image: accounts-service
    context: accounts_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: transaction-service
    context: transaction_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: bill-pay-service
    context: bill_pay
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: notifications-service
    context: notifications_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
        AZURE_ACS_CONNECTION_STRING: "{{.AZURE_ACS_CONNECTION_STRING}}"
        AZURE_ACS_SMS_PHONE_NUMBER: "{{.AZURE_ACS_SMS_PHONE_NUMBER}}"
        AZURE_ACS_EMAIL_SENDER: "{{.AZURE_ACS_EMAIL_SENDER}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: scheduler-service
    context: scheduler_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: mssql-custom
    context: transaction_service/mssql
    docker:
      dockerfile: Dockerfile
  - image: postgres-custom
    context: accounts_service/postgres
    docker:
      dockerfile: Dockerfile
  - image: chatbot-service
    context: chatbot_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        OPENAI_LOG: "{{.OPENAI_LOG}}"
        OPENAI_API_KEY: "{{.OPENAI_API_KEY}}"
        OPENAI_BASE_URL: "{{.OPENAI_BASE_URL}}"
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: scenario-runner
    context: scenario_service
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "scenario_service/requirements.txt"
        dest: /app/requirements.txt
      - src: "scenario_service/**/*.py"
        dest: /app/scenario_service
      - src: "locust/**/*.py"
        dest: /app/locust
      - src: "relibank/chaos_mesh/experiments/*.yaml"
        dest: /app/relibank/chaos_mesh/experiments/
      - src: "index.html"
        dest: /app
  - image: kafka-with-monitoring
    context: kafka_service
    docker:
      dockerfile: Dockerfile
      buildArgs:
        NEW_RELIC_USER_API_KEY: "{{.NEW_RELIC_USER_API_KEY}}"
        NEW_RELIC_ACCOUNT_ID: "{{.NEW_RELIC_ACCOUNT_ID}}"
        NEW_RELIC_LICENSE_KEY: "{{.NEW_RELIC_LICENSE_KEY}}"
        APP_NAME: "{{.APP_NAME}}"

# Manifests configuration - use Kustomize to handle image name mapping and resources
manifests:
  kustomize:
    paths:
    - "k8s/overlays/dev"
    # - "k8s/overlays/azure-prod"

deploy:
  helm:
    releases:
    - name: chaos-mesh
      remoteChart: chaos-mesh
      namespace: chaos-mesh
      createNamespace: true
      repo: https://charts.chaos-mesh.org
      version: 2.6.2
      valuesFiles:
      - scenario_service/chaos_mesh/values.yaml
      wait: true
      upgradeOnChange: true
  kubectl:
    hooks:
      before:
      - host:
          command: ["echo", "ðŸš€ Starting Relibank deployment with Kustomize"]
          dir: "."
      after:
      - host:
          command: ["kubectl", "label", "namespace", "relibank", "chaos-mesh.org/inject=enabled", "--overwrite"]
          dir: "."
      - host:
          command: ["kubectl", "apply", "-f", "scenario_service/chaos_mesh/experiments/relibank-pod-chaos-examples.yaml"]
          dir: "."
      - host:
          command: ["echo", "ðŸŽ­ Chaos Mesh installed and Relibank namespace labeled for chaos injection"]
          dir: "."
      - host:
          command: ["echo", "ðŸ”¥ Chaos experiments deployed and ready to test system resilience"]
          dir: "."
      # - host:
      #     command: ["helm", "repo", "add", "ingress-nginx", "https://kubernetes.github.io/ingress-nginx"]
      #     dir: "."
      # - host:
      #     command: ["helm", "repo", "update"]
      #     dir: "."
      # - host:
      #     command: ["helm", "upgrade", "--install", "nginx-ingress", "ingress-nginx/ingress-nginx", "--namespace", "nginx-ingress", "--create-namespace", "--version", "4.10.1", "--values", "k8s/base/configs/nginx-values.yaml"]
      #     dir: "."

# Port forwarding configuration - standardized for maintainability
portForward:
- resourceType: service
  resourceName: frontend-service
  namespace: relibank
  port: 3000
  localPort: 3000
- resourceType: service
  resourceName: accounts-service
  namespace: relibank
  port: 5002
  localPort: 5002
- resourceType: service
  resourceName: transaction-service
  namespace: relibank
  port: 5001
  localPort: 5001
- resourceType: service
  resourceName: bill-pay-service
  namespace: relibank
  port: 5000
  localPort: 5000
- resourceType: service
  resourceName: chatbot-service
  namespace: relibank
  port: 5003
  localPort: 5003
- resourceType: service
  resourceName: notifications-service
  namespace: relibank
  port: 5000
  localPort: 5005
- resourceType: service
  resourceName: scheduler-service
  namespace: relibank
  port: 5004
  localPort: 5004
- resourceType: service
  resourceName: scenario-runner-service
  namespace: relibank
  port: 8000
  localPort: 8000
- resourceType: service
  resourceName: chaos-dashboard
  namespace: chaos-mesh
  port: 2333
  localPort: 2333
# - resourceType: service
#   resourceName: nginx
#   namespace: nginx-ingress-controller
#   port: 80
#   localPort: 8080

# Multiple profiles for different environments and use cases
profiles:
# ===========================================
# LOCAL DEVELOPMENT PROFILE
# ===========================================
- name: local
  build:
    local:
      push: false
  # FIX: Override the 'manifests' block instead of the 'deploy' block
  # This tells Skaffold which kustomize path to use, while keeping the helm/kubectl deployers
  manifests:
    kustomize:
      paths:
      - "k8s/overlays/dev"

# Define a profile for your production environment
- name: azure-prod
  # FIX: Override the 'manifests' block instead of the 'deploy' block
  manifests:
    kustomize:
      paths:
      - "k8s/overlays/azure-prod"
