apiVersion: skaffold/v2beta28
kind: Config
metadata:
  name: relibank
build:
  artifacts:
  - image: relibank/accounts-service
    context: accounts_service
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: relibank/transaction-service
    context: transaction_service
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: relibank/bill-pay-service
    context: bill_pay
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: relibank/notifications-service
    context: notifications_service
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  - image: relibank/scheduler-service
    context: event_scheduler
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.py"
        dest: /app
  tagPolicy:
    sha256: {}
  local:
    useBuildkit: true

# Deployment configuration
deploy:
  kubectl:
    manifests:
    - k8s/namespace.yaml
    - k8s/infrastructure/*.yaml
    - k8s/databases/*.yaml
    - k8s/services/*.yaml
    hooks:
      before:
      - host:
          command: ["sh", "-c", "export $(cat skaffold.env | xargs) && envsubst < k8s/secrets.yaml | kubectl apply -f -"]
          dir: "."
      - host:
          command: ["sh", "-c", "export $(cat skaffold.env | xargs) && envsubst < k8s/configmap.yaml | kubectl apply -f -"]
          dir: "."
      after:
      - host:
          command: ["kubectl", "wait", "--for=condition=Ready", "pods", "-l", "app=zookeeper", "-n", "relibank", "--timeout=300s"]
          dir: "."
      - host:
          command: ["kubectl", "wait", "--for=condition=Ready", "pods", "-l", "app=kafka", "-n", "relibank", "--timeout=300s"]
          dir: "."
      - host:
          command: ["kubectl", "wait", "--for=condition=Ready", "pods", "-l", "tier=database", "-n", "relibank", "--timeout=300s"]
          dir: "."
      - host:
          command: ["sleep", "30"]
          dir: "."
      - host:
          command: ["echo", "ðŸš€ Infrastructure and databases are ready!"]
          dir: "."

# Port forwarding configuration
portForward:
- resourceType: service
  resourceName: accounts-service
  namespace: relibank
  port: 5000
  localPort: 5002
- resourceType: service
  resourceName: transaction-service
  namespace: relibank
  port: 5000
  localPort: 5001
- resourceType: service
  resourceName: bill-pay-service
  namespace: relibank
  port: 5000
  localPort: 5000
- resourceType: service
  resourceName: notifications-service
  namespace: relibank
  port: 5000
  localPort: 5003

# Multiple profiles for different environments and use cases
profiles:
# ===========================================
# LOCAL DEVELOPMENT PROFILE
# ===========================================
- name: local
  build:
    local:
      push: false
      useDockerCLI: true
    tagPolicy:
      envTemplate:
        template: "{{.IMAGE_NAME}}:local-{{.SHA}}"
  patches:
  - op: replace
    path: /build/local/useBuildkit
    value: false
  activation:
  - env: SKAFFOLD_PROFILE=local

# ===========================================
# DEBUG PROFILE
# ===========================================
- name: debug
  patches:
  - op: add
    path: /build/artifacts/0/docker/buildArgs/DEBUG
    value: "true"
  - op: add
    path: /build/artifacts/1/docker/buildArgs/DEBUG
    value: "true"
  - op: add
    path: /build/artifacts/2/docker/buildArgs/DEBUG
    value: "true"
  - op: add
    path: /build/artifacts/3/docker/buildArgs/DEBUG
    value: "true"
  - op: add
    path: /build/artifacts/4/docker/buildArgs/DEBUG
    value: "true"
  activation:
  - command: debug

# ===========================================
# CHAOS INFRASTRUCTURE PROFILE
# ===========================================
- name: chaos-infra
  deploy:
    helm:
      releases:
      - name: chaos-mesh
        remoteChart: chaos-mesh
        repo: https://charts.chaos-mesh.org
        namespace: chaos-system
        createNamespace: true
        version: "2.7.2"
        setValues:
          chaosDaemon.runtime: containerd
          chaosDaemon.socketPath: /run/containerd/containerd.sock
          dashboard.securityMode: false
          dashboard.create: true
          controllerManager.replicaCount: 1
        wait: true
      hooks:
        after:
        - host:
            command: ["kubectl", "wait", "--for=condition=Ready", "pods", "-l", "app.kubernetes.io/name=chaos-mesh", "-n", "chaos-system", "--timeout=300s"]
            dir: "."
        - host:
            command: ["sleep", "10"]
            dir: "."
        - host:
            command: ["kubectl", "wait", "--for=condition=Established", "crd", "podchaos.chaos-mesh.org", "--timeout=120s"]
            dir: "."
        - host:
            command: ["kubectl", "wait", "--for=condition=Established", "crd", "networkchaos.chaos-mesh.org", "--timeout=120s"]
            dir: "."
        - host:
            command: ["kubectl", "wait", "--for=condition=Established", "crd", "iochaos.chaos-mesh.org", "--timeout=120s"]
            dir: "."
        - host:
            command: ["kubectl", "wait", "--for=condition=Established", "crd", "stresschaos.chaos-mesh.org", "--timeout=120s"]
            dir: "."
        - host:
            command: ["kubectl", "wait", "--for=condition=Established", "crd", "workflows.chaos-mesh.org", "--timeout=120s"]
            dir: "."
        - host:
            command: ["echo", "ðŸ”¬ Chaos Mesh infrastructure ready! Dashboard: http://localhost:2333"]
            dir: "."
  activation:
  - command: chaos-infra

---
apiVersion: skaffold/v2beta28
kind: Config
metadata:
  name: relibank-chaos
requires:
- configs:
  - relibank
deploy:
  kubectl:
    manifests:
    - chaos_mesh/experiments/*.yaml
    hooks:
      before:
      - host:
          command: ["kubectl", "get", "crd", "podchaos.chaos-mesh.org"]
          dir: "."
      after:
      - host:
          command: ["echo", "ðŸ§ª Chaos experiments deployed!"]
          dir: "."
